name: release-mirrors

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Release tag (defaults to the tag of the release event)"
        required: false

jobs:
  get-files:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
        with:
          path: MaaRelease
      - name: "Fetch release info"
        run: |
          if [ -n "${{ inputs.release_tag }}" ]; then
            echo "release_tag=${{ inputs.release_tag }}" >> $GITHUB_ENV
          else
            gh release list --repo 'MaaAssistantArknights/MaaRelease' --limit 10 | tee ${{ runner.temp }}/release_maa
            head -n 1 ${{ runner.temp }}/release_maa | awk '{ print $1 }' > ${{ runner.temp }}/config

            echo "config:"
            cat ${{ runner.temp }}/config

            echo "release_tag=$(head -n 1 ${{ runner.temp }}/config)" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Download release"
        run: |
          mkdir -pv upload-dir/${{ env.release_tag }}
          cd upload-dir/${{ env.release_tag }}
          gh release download ${{ env.release_tag }} --repo 'MaaAssistantArknights/MaaRelease' --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - name: "Upload to mirror 0"
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.SSH_MIRROR_0_HOST }}
  #         username: ${{ secrets.SSH_MIRROR_0_USER }}
  #         key: ${{ secrets.SSH_MIRROR_0_KEY }}
  #         source: "upload-dir/${{ env.release_tag }}"
  #         target: "/data/html/MaaAssistantArknights/MaaRelease/releases/download"
  #         strip_components: 1
      - name: "Upload to R2"
        if: github.repository == 'MaaAssistantArknights/MaaRelease'
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          SOURCE_DIR: "upload-dir"
          DEST_DIR: "MaaAssistantArknights/MaaRelease/releases/download"

      - name: Use Node.js
        if: (github.repository == 'MaaAssistantArknights/MaaRelease' || github.repository == 'AnnAngela/MaaRelease') && !contains(env.release_tag, '.g')
        uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: lts/*
          check-latest: true
          # cache: npm
      - name: "Upload to AnnAngela's COS and fire webhook"
        if: (github.repository == 'MaaAssistantArknights/MaaRelease' || github.repository == 'AnnAngela/MaaRelease') && !contains(env.release_tag, '.g')
        run: |
          echo "Installing coscli..."
          gh release download --pattern coscli-linux --dir ${{ runner.temp }}/coscli --clobber --repo tencentyun/coscli
          chmod +x ${{ runner.temp }}/coscli/coscli-linux
          echo "coscli installed."
          touch ~/.cos.yaml
          node MaaRelease/.github/AnnAngela/prepare.js
          echo "::group::coscli output"
          ${{ runner.temp }}/coscli/coscli-linux sync ${{ runner.temp }}/upload-dir/${{ env.release_tag }} cos://${{ secrets.ANNANGELA_COS_BUCKET }}/MaaRelease --recursive -e cos.accelerate.myqcloud.com -i ${{ secrets.ANNANGELA_COS_SECRET_ID }} -k ${{ secrets.ANNANGELA_COS_SECRET_KEY }}
          echo "::endgroup::"
          node MaaRelease/.github/AnnAngela/webhook.js
        env:
          WEBHOOK_URL: https://webhook.annangela.cn/custom?from=MaaRelease
          WEBHOOK_SECRET: ${{ secrets.ANNANGELA_WEBHOOK_SECRET }}
          GH_TOKEN: ${{ github.token }}

      - name: Dispatch the "update_version_api" workflow
        run: gh workflow run update_version_api --repo ${{ github.repository }}
  
      - name: "Upload to MAA S3"
        if: github.repository == 'MaaAssistantArknights/MaaRelease'
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.MAA_MINIO_RELEASE_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MAA_MINIO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MAA_MINIO_SECRET_KEY }}
          AWS_REGION: 'us-east-1'
          AWS_S3_ENDPOINT: ${{ secrets.MAA_MINIO_ENDPOINT }}
          SOURCE_DIR: "upload-dir"
          DEST_DIR: "MaaAssistantArknights/MaaRelease/releases/download"
