name: release-mirrors

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: Release tag (defaults to the tag of the release event)
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  getReleaseTag:
    name: Get release tag
    runs-on: ubuntu-latest
    steps:
      - name: Fetch release info
        id: fetchReleaseInfo
        if: ${{ !inputs.release_tag }}
        run: |
          gh release list --repo 'MaaAssistantArknights/MaaRelease' --limit 10 | tee ${{ runner.temp }}/release_maa
          head -n 1 ${{ runner.temp }}/release_maa | awk '{ print $1 }' > ${{ runner.temp }}/config

          echo "config:"
          cat ${{ runner.temp }}/config

          echo "release_tag=$(head -n 1 ${{ runner.temp }}/config)" >> $GITHUB_OUTPUT
    outputs:
      release_tag: ${{ inputs.release_tag || steps.fetchReleaseInfo.outputs.release_tag }}

  ota_server:
    name: Upload to OTA Server
    runs-on: ubuntu-latest
    needs: getReleaseTag
    # Disable due to no relative secrets
    if: 1 == 0 && github.repository == 'MaaAssistantArknights/MaaRelease'
    steps:
      - uses: actions/checkout@v3
      - name: Download release files
        id: downloadReleaseFiles
        uses: ./.github/downloadReleaseFiles
        with:
          release_tag: ${{ needs.getReleaseTag.outputs.release_tag }}
          os: windows
      - name: Upload to OTA Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_ID }}
          source: ${{ steps.downloadReleaseFiles.outputs.dirWithReleaseTag }}
          target: ${{ format('{0}/{1}', 'OTA/MaaAssistantArknights/MaaRelease/releases/download',needs.getReleaseTag.outputs.release_tag) }}
          strip_components: 1

  R2:
    name: Upload to R2
    runs-on: ubuntu-latest
    needs: getReleaseTag
    if: github.repository == 'MaaAssistantArknights/MaaRelease'
    steps:
      - uses: actions/checkout@v3
      - name: Download release files
        id: downloadReleaseFiles
        uses: ./.github/downloadReleaseFiles
        with:
          release_tag: ${{ needs.getReleaseTag.outputs.release_tag }}
          os: windows
      - name: Upload to R2
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          SOURCE_DIR: ${{ steps.downloadReleaseFiles.outputs.dir }}
          DEST_DIR: MaaAssistantArknights/MaaRelease/releases/download

  AnnAngelaCOS:
    name: Upload to AnnAngela's COS and fire webhook
    runs-on: ubuntu-latest
    needs: getReleaseTag
    if: (github.repository == 'MaaAssistantArknights/MaaRelease' || github.repository == 'AnnAngela/MaaRelease') && !contains(needs.getReleaseTag.outputs.release_tag, '.g')
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: lts/*
          check-latest: true
          # cache: npm
      - name: Download release files
        id: downloadReleaseFiles
        uses: ./.github/downloadReleaseFiles
        with:
          release_tag: ${{ needs.getReleaseTag.outputs.release_tag }}
          os: windows
      - name: Upload to AnnAngela's COS and fire webhook
        run: |
          echo "Installing coscli..."
          gh release download --pattern coscli-linux --dir ${{ runner.temp }}/coscli --clobber --repo tencentyun/coscli
          chmod +x ${{ runner.temp }}/coscli/coscli-linux
          echo "coscli installed."
          touch ~/.cos.yaml
          node .github/AnnAngela/prepare.js
          echo "::group::coscli output"
          ${{ runner.temp }}/coscli/coscli-linux sync ${{ steps.downloadReleaseFiles.outputs.dir }}/${{ needs.getReleaseTag.outputs.release_tag }} cos://${{ secrets.ANNANGELA_COS_BUCKET }}/MaaRelease --recursive -e cos.accelerate.myqcloud.com -i ${{ secrets.ANNANGELA_COS_SECRET_ID }} -k ${{ secrets.ANNANGELA_COS_SECRET_KEY }}
          echo "::endgroup::"
          node .github/AnnAngela/webhook.js
        env:
          WEBHOOK_URL: https://webhook.annangela.cn/custom?from=MaaRelease
          WEBHOOK_SECRET: ${{ secrets.ANNANGELA_WEBHOOK_SECRET }}

  MAA_S3:
    name: Upload to MAA S3
    runs-on: ubuntu-latest
    needs: getReleaseTag
    if: github.repository == 'MaaAssistantArknights/MaaRelease'
    steps:
      - name: Download release files
        id: downloadReleaseFiles
        uses: ./.github/downloadReleaseFiles
        with:
          release_tag: ${{ needs.getReleaseTag.outputs.release_tag }}
          os: windows
      - name: Upload to MAA S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.MAA_MINIO_RELEASE_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MAA_MINIO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MAA_MINIO_SECRET_KEY }}
          AWS_REGION: us-east-1
          AWS_S3_ENDPOINT: ${{ secrets.MAA_MINIO_ENDPOINT }}
          SOURCE_DIR: ${{ steps.downloadReleaseFiles.outputs.dir }}
          DEST_DIR: MaaAssistantArknights/MaaRelease/releases/download

  R2_MAC:
    name: Upload to R2 mac
    runs-on: macos-13
    needs: getReleaseTag
    # Disable due to no relative secrets
    if: 1 == 0 && github.repository == 'MaaAssistantArknights/MaaRelease'
    steps:
      - uses: actions/checkout@v3
      - name: Download release files
        id: downloadReleaseFiles
        uses: ./.github/downloadReleaseFiles
        with:
          release_tag: ${{ needs.getReleaseTag.outputs.release_tag }}
          os: macos
      - name: Install Rclone
        run: brew install rclone
      - name: Upload Appcast Packages
        env:
          RCLONE_CONFIG_MAA_TYPE: s3
          RCLONE_CONFIG_MAA_PROVIDER: Cloudflare
          RCLONE_CONFIG_MAA_ACCESS_KEY_ID: ${{ secrets.R2_KEY_ID }}
          RCLONE_CONFIG_MAA_SECRET_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
          RCLONE_CONFIG_MAA_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
        run: |
          rclone sync ${{ steps.downloadReleaseFiles.outputs.dirWithReleaseTag }} MAA:maa-release/macos
          rclone delete MAA:maa-release/macos --min-age 90d
  
  updateVersionApi:
    name: Dispatch the "update_version_api" workflow
    runs-on: ubuntu-latest
    needs:
      - ota_server
      - R2
      - AnnAngelaCOS
      # 太慢了不等他
      # - MAA_S3
      # R2_MAC 是通过自有渠道发版，不经过 version api
    steps:
      - name: Dispatch the "update_version_api" workflow
        run: gh workflow run update_version_api --repo ${{ github.repository }}
