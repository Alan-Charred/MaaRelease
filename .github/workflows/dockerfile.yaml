name: docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths:
      - scripts/**
      - .github/workflows/dockerfile.yaml

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout MaaAssistantArknights/containers
        uses: actions/checkout@v4
        with:
          show-progress: false
          repository: MaaAssistantArknights/containers
          path: MaaContainers

      - name: Checkout MaaAssistantArknights/MaaRelease
        uses: actions/checkout@v4
        with:
          show-progress: false
          repository: MaaAssistantArknights/MaaRelease
          path: MaaRelease

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
      - name: Generate cache primary key based on nodejs's and npm's version and package-lock.json's hash
        id: version
        shell: bash
        run: echo "hash=npm_cache:node@$(node -v | grep -oP '(?<=^v)\d+')_npm@$(npm -v | grep -oP '^\d+')_package-lock@$(openssl dgst -sha3-512 MaaRelease/scripts/package-lock.json | grep -oP '[\da-f]{128}')" >> $GITHUB_OUTPUT && cat $GITHUB_OUTPUT
      - name: Try to restore node_modules from cache
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: MaaRelease/scripts/node_modules
          key: ${{ steps.version.outputs.hash }}
      - name: Install dependencies if no cache for node_modules
        if: success() && steps.cache.outputs.cache-hit != 'true'
        run: cd MaaRelease/scripts && npm run ci
      - name: Save node_modules to cache
        if: success() && steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: MaaRelease/scripts/node_modules
          key: ${{ steps.version.outputs.hash }}
      - name: Run prebuild.sh
        run: sh MaaContainers/dockerfile/jenkins-base/prebuild.sh

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: harbor.maa-org.net
          username: ${{ secrets.MAA_HARBOR_ROBOT_USERNAME }}
          password: ${{ secrets.MAA_HARBOR_ROBOT_PASSWORD }} # 每 30 天更新一次

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: harbor.maa-org.net/maa/jenkins-base
          tags: |
            type=raw,value=latest
            type=sha,prefix={{date 'Y-MM-DDTHH-mm-ss[Z]'}}_

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: MaaContainers/dockerfile/jenkins-base/Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          push: true
